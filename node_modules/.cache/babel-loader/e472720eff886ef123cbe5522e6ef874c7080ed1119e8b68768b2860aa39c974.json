{"ast":null,"code":"var _jsxFileName = \"/home/spike/Documents/GitHub/Practice-React/src/components/AllocationList.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../Styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\n// variable to hold URL with Django Users API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'http://localhost:8000/portfolio/assets/';\nfunction AllocationList() {\n  _s();\n  const [assets, setAssets] = React.useState([]);\n  React.useEffect(() => {\n    axios.get(baseURL, {\n      params: {\n        user: 3\n      }\n    }).then(response => {\n      setAssets(response.data);\n    });\n  }, []);\n  if (!assets) return null;\n\n  // TODO: create dictonary containing tickers and share amounts\n  var dictAllocation = {};\n  for (let i = 0; i < assets.length; i++) {\n    if (assets[i].ticker_text in dictAllocation) {\n      dictAllocation[assets[i].ticker_text] = dictAllocation[assets[i].ticker_text] + parseInt(assets[i].shares_integer);\n    } else {\n      dictAllocation[assets[i].ticker_text] = parseInt(assets[i].shares_integer);\n    }\n  }\n  const keys = Object.keys(dictAllocation);\n  const values = Object.values(dictAllocation);\n  const display = [];\n  for (let i = 0; i < keys.length; i++) {\n    display.push(keys[i] + \": \" + values[i]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: display.map(display => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AllocationList, \"TkvTObijVMpqXANY4UjdWlfk3qg=\");\n_c = AllocationList;\nexport default AllocationList;\nvar _c;\n$RefreshReg$(_c, \"AllocationList\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","baseURL","AllocationList","_s","assets","setAssets","useState","useEffect","get","params","user","then","response","data","dictAllocation","i","length","ticker_text","parseInt","shares_integer","keys","Object","values","display","push","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/spike/Documents/GitHub/Practice-React/src/components/AllocationList.jsx"],"sourcesContent":["import React from 'react';\nimport '../Styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\n// variable to hold URL with Django Users API\nconst baseURL = 'http://localhost:8000/portfolio/assets/';\n\nfunction AllocationList()\n{\n  const [assets, setAssets] = React.useState([]);\n\n  React.useEffect(() => {\n    axios.get(baseURL,  {\n      params: {\n        user: 3\n      }\n    }).then((response) => {\n      setAssets(response.data);\n    });\n  }, []);\n\n  if (!assets) return null;\n\n  // TODO: create dictonary containing tickers and share amounts\n  var dictAllocation = {};\n  for (let i = 0; i < assets.length; i++)\n  {\n    if (assets[i].ticker_text in dictAllocation)\n    {\n      dictAllocation[assets[i].ticker_text] = dictAllocation[assets[i].ticker_text] + parseInt(assets[i].shares_integer)\n    }\n    else\n    {\n      dictAllocation[assets[i].ticker_text] = parseInt(assets[i].shares_integer)\n    }\n  }\n\n  const keys = Object.keys(dictAllocation);\n  const values = Object.values(dictAllocation);\n  const display = []\n  for (let i = 0; i < keys.length; i++)\n  {\n    display.push(keys[i] + \": \" + values[i])\n  }\n\n\n  return (\n    <div>\n      {display.map((display) => (\n        <p>{display}</p>\n      ))}\n    </div>);\n }\n\n\nexport default AllocationList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,SAASC,cAAcA,CAAA,EACvB;EAAAC,EAAA;EACE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAE9CT,KAAK,CAACU,SAAS,CAAC,MAAM;IACpBT,KAAK,CAACU,GAAG,CAACP,OAAO,EAAG;MAClBQ,MAAM,EAAE;QACNC,IAAI,EAAE;MACR;IACF,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACpBP,SAAS,CAACO,QAAQ,CAACC,IAAI,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACT,MAAM,EAAE,OAAO,IAAI;;EAExB;EACA,IAAIU,cAAc,GAAG,CAAC,CAAC;EACvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,MAAM,CAACY,MAAM,EAAED,CAAC,EAAE,EACtC;IACE,IAAIX,MAAM,CAACW,CAAC,CAAC,CAACE,WAAW,IAAIH,cAAc,EAC3C;MACEA,cAAc,CAACV,MAAM,CAACW,CAAC,CAAC,CAACE,WAAW,CAAC,GAAGH,cAAc,CAACV,MAAM,CAACW,CAAC,CAAC,CAACE,WAAW,CAAC,GAAGC,QAAQ,CAACd,MAAM,CAACW,CAAC,CAAC,CAACI,cAAc,CAAC;IACpH,CAAC,MAED;MACEL,cAAc,CAACV,MAAM,CAACW,CAAC,CAAC,CAACE,WAAW,CAAC,GAAGC,QAAQ,CAACd,MAAM,CAACW,CAAC,CAAC,CAACI,cAAc,CAAC;IAC5E;EACF;EAEA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACN,cAAc,CAAC;EACxC,MAAMQ,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACR,cAAc,CAAC;EAC5C,MAAMS,OAAO,GAAG,EAAE;EAClB,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,IAAI,CAACJ,MAAM,EAAED,CAAC,EAAE,EACpC;IACEQ,OAAO,CAACC,IAAI,CAACJ,IAAI,CAACL,CAAC,CAAC,GAAG,IAAI,GAAGO,MAAM,CAACP,CAAC,CAAC,CAAC;EAC1C;EAGA,oBACEf,OAAA;IAAAyB,QAAA,EACGF,OAAO,CAACG,GAAG,CAAEH,OAAO,iBACnBvB,OAAA;MAAAyB,QAAA,EAAIF;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AACT;AAAC3B,EAAA,CA7COD,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAgDvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}