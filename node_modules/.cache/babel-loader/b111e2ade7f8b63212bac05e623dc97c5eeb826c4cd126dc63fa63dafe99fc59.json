{"ast":null,"code":"var _jsxFileName = \"/home/spike/Documents/GitHub/Practice-React/my-app/src/pages/PortfolioBody.jsx\";\nimport React from 'react';\nimport '../Styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// TO DO: list out all stocks a user owns\n// List of dictionaries, this list needs to come from django backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stocks = [{\n  id: 1,\n  title: \"MSFT\",\n  quantity: 5,\n  costBasis: 250.64\n}, {\n  id: 2,\n  title: \"AAPL\",\n  quantity: 7,\n  costBasis: 121.45\n}, {\n  id: 3,\n  title: \"VTI\",\n  quantity: 10,\n  costBasis: 203.64\n}];\n// Lamda Function\nconst stocksItems = stocks.map(stock => /*#__PURE__*/_jsxDEV(\"li\", {\n  class: \"list-group-item\",\n  style: {\n    background: 'salmon'\n  },\n  children: [\" \", stock[\"title\"], \", \", stock[\"quantity\"], \", \", stock[\"costBasis\"], \" \"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this));\nfunction PortfolioBody() {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    class: \"list-group\",\n    children: stocksItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_c = PortfolioBody;\nexport default PortfolioBody;\nvar _c;\n$RefreshReg$(_c, \"PortfolioBody\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","stocks","id","title","quantity","costBasis","stocksItems","map","stock","class","style","background","children","fileName","_jsxFileName","lineNumber","columnNumber","PortfolioBody","_c","$RefreshReg$"],"sources":["/home/spike/Documents/GitHub/Practice-React/my-app/src/pages/PortfolioBody.jsx"],"sourcesContent":["import React from 'react';\nimport '../Styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// TO DO: list out all stocks a user owns\n// List of dictionaries, this list needs to come from django backend\nconst stocks = [\n    {\n    id: 1,\n    title: \"MSFT\",\n    quantity: 5,\n    costBasis: 250.64,\n    },\n    {\n    id: 2,\n    title: \"AAPL\",\n    quantity: 7,\n    costBasis: 121.45,\n    },     \n    {\n    id: 3,\n    title: \"VTI\",\n    quantity: 10,\n    costBasis: 203.64,\n    }\n    ];\n// Lamda Function\nconst stocksItems = stocks.map((stock) =>\n  <li class=\"list-group-item\" style={{background: 'salmon'}}> {stock[\"title\"]}, {stock[\"quantity\"]}, {stock[\"costBasis\"]} </li>\n);\n\nfunction PortfolioBody(){\n  return (\n        <ul class=\"list-group\">{stocksItems}</ul>\n      );\n}\n\nexport default PortfolioBody;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAO,sCAAsC;;AAE7C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,CACX;EACAC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,CAAC;EACXC,SAAS,EAAE;AACX,CAAC,EACD;EACAH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,CAAC;EACXC,SAAS,EAAE;AACX,CAAC,EACD;EACAH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE;AACX,CAAC,CACA;AACL;AACA,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAG,CAAEC,KAAK,iBACnCR,OAAA;EAAIS,KAAK,EAAC,iBAAiB;EAACC,KAAK,EAAE;IAACC,UAAU,EAAE;EAAQ,CAAE;EAAAC,QAAA,GAAC,GAAC,EAACJ,KAAK,CAAC,OAAO,CAAC,EAAC,IAAE,EAACA,KAAK,CAAC,UAAU,CAAC,EAAC,IAAE,EAACA,KAAK,CAAC,WAAW,CAAC,EAAC,GAAC;AAAA;EAAAK,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAK,CAC9H;AAED,SAASC,aAAaA,CAAA,EAAE;EACtB,oBACMjB,OAAA;IAAIS,KAAK,EAAC,YAAY;IAAAG,QAAA,EAAEN;EAAW;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAEjD;AAACE,EAAA,GAJQD,aAAa;AAMtB,eAAeA,aAAa;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}