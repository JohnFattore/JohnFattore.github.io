{"ast":null,"code":"var _jsxFileName = \"/home/spike/Documents/GitHub/Practice-React/my-app/src/components/AssetPost.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../Styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\n// Django RESTFUL API asset base url\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURLDjango = 'http://localhost:8000/portfolio/assets/';\n// Finnhub RESTful API base url, uses verison 1\nconst baseURLFinnhub = 'https://finnhub.io/api/v1/';\nfunction AllocationList() {\n  _s();\n  // React's use state preserves data between page reloads\n  const [count, setCount] = useState(0);\n  const [strTicker, setTicker] = useState('C');\n  const [intShares, setShares] = useState(2);\n  const [curPrice, setPrice] = useState(100);\n  const [dtmBuyDate, setBuyDate] = useState('2023-11-11');\n  const [strAccount, setAccount] = useState('roth_ira');\n  const [intUser, setUser] = useState(1);\n  const [symbol, setSymbol] = React.useState(\"SPY\");\n  const [assets, setAssets] = React.useState([]);\n\n  // Handles form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSymbol(event.target.symbol.value);\n  };\n\n  // Building API Call\n  var type = \"quote/\";\n  var getRequest = baseURLFinnhub + type;\n\n  // Get request to Finnhub for stock quote\n  React.useEffect(() => {\n    axios.get(getRequest, {\n      params: {\n        symbol: symbol,\n        token: \"ckivfdpr01qlj9q7a2rgckivfdpr01qlj9q7a2s0\"\n      }\n    }).then(response => {\n      setAssets(response.data);\n    });\n  }, [symbol, getRequest]);\n\n  // Post request to Django backend for submitting stock purchases\n  React.useEffect(() => {\n    axios.post(baseURLDjango, {\n      ticker_text: strTicker,\n      shares_integer: intShares,\n      costbasis_price: curPrice,\n      buy_date: dtmBuyDate,\n      account: strAccount,\n      user: intUser\n    });\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"symbol\",\n        id: \"symbol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(AllocationList, \"OLtMO/fNQJjSjvBmwOvOD/MJbnA=\");\n_c = AllocationList;\nexport default AllocationList;\nvar _c;\n$RefreshReg$(_c, \"AllocationList\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","baseURLDjango","baseURLFinnhub","AllocationList","_s","count","setCount","useState","strTicker","setTicker","intShares","setShares","curPrice","setPrice","dtmBuyDate","setBuyDate","strAccount","setAccount","intUser","setUser","symbol","setSymbol","assets","setAssets","handleSubmit","event","preventDefault","target","value","type","getRequest","useEffect","get","params","token","then","response","data","post","ticker_text","shares_integer","costbasis_price","buy_date","account","user","children","onSubmit","class","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/spike/Documents/GitHub/Practice-React/my-app/src/components/AssetPost.jsx"],"sourcesContent":["import React from 'react';\nimport '../Styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\n// Django RESTFUL API asset base url\nconst baseURLDjango = 'http://localhost:8000/portfolio/assets/';\n// Finnhub RESTful API base url, uses verison 1\nconst baseURLFinnhub = 'https://finnhub.io/api/v1/';\n\nfunction AllocationList()\n{\n    // React's use state preserves data between page reloads\n    const [count, setCount] = useState(0);\n    const [strTicker, setTicker] = useState('C')\n    const [intShares, setShares] = useState(2)\n    const [curPrice, setPrice] = useState(100)\n    const [dtmBuyDate, setBuyDate] = useState('2023-11-11')\n    const [strAccount, setAccount] = useState('roth_ira')\n    const [intUser, setUser] = useState(1)\n    const [symbol, setSymbol] = React.useState(\"SPY\");\n    const [assets, setAssets] = React.useState([]);\n\n    // Handles form submission\n    const handleSubmit = event => {\n        event.preventDefault();\n        setSymbol(event.target.symbol.value);\n      }\n\n    // Building API Call\n    var type = \"quote/\"\n    var getRequest = baseURLFinnhub + type\n\n    // Get request to Finnhub for stock quote\n    React.useEffect(() => {\n        axios.get(getRequest,  {\n          params: {\n            symbol: symbol,\n            token: \"ckivfdpr01qlj9q7a2rgckivfdpr01qlj9q7a2s0\"\n          }\n        }).then((response) => {\n          setAssets(response.data);\n        });\n      }, [symbol, getRequest]);\n\n    // Post request to Django backend for submitting stock purchases\n    React.useEffect(() => {\n        axios.post(baseURLDjango, {\n            ticker_text: strTicker,\n            shares_integer: intShares,\n            costbasis_price: curPrice,\n            buy_date: dtmBuyDate,\n            account: strAccount,\n            user: intUser\n        });\n    }, [count]);\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n            <input type=\"text\" class=\"form-control\" name=\"symbol\" id=\"symbol\"/>\n            <button type=\"submit\">Submit</button> \n            </form>\n        </div>\n      );\n }\n\n\nexport default AllocationList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}